{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBS","debugId":null}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/BinInfoCard.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { BinData } from '@/lib/binUtils';\n\ninterface BinInfoCardProps {\n  bin: string;\n  data: BinData;\n  isLuhnValid: boolean;\n  securityAnalysis?: any;\n  validation?: any;\n}\n\nexport default function BinInfoCard({ \n  bin, \n  data, \n  isLuhnValid, \n  securityAnalysis,\n  validation \n}: BinInfoCardProps) {\n  return (\n    <Card className=\"w-full max-w-4xl mx-auto\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center justify-between\">\n          <span>BIN Analysis Results</span>\n          <Badge variant={isLuhnValid ? \"default\" : \"destructive\"}>\n            {bin}\n          </Badge>\n        </CardTitle>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-6\">\n        {/* Basic Validation Section */}\n        <section>\n          <h3 className=\"text-lg font-semibold mb-3 flex items-center\">\n            <span className=\"w-2 h-2 bg-blue-500 rounded-full mr-2\"></span>\n            Basic BIN Validation\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"p-3 bg-muted rounded-lg\">\n              <p className=\"text-sm text-muted-foreground\">Format Check</p>\n              <p className=\"font-medium text-green-600\">✓ Valid</p>\n            </div>\n            <div className=\"p-3 bg-muted rounded-lg\">\n              <p className=\"text-sm text-muted-foreground\">Length</p>\n              <p className=\"font-medium\">{bin.length} digits</p>\n            </div>\n            <div className=\"p-3 bg-muted rounded-lg\">\n              <p className=\"text-sm text-muted-foreground\">Luhn Algorithm</p>\n              <p className={`font-medium ${isLuhnValid ? 'text-green-600' : 'text-red-600'}`}>\n                {isLuhnValid ? '✓ Passed' : '✗ Failed'}\n              </p>\n            </div>\n          </div>\n        </section>\n\n        <Separator />\n\n        {/* BIN Data Information Section */}\n        <section>\n          <h3 className=\"text-lg font-semibold mb-3 flex items-center\">\n            <span className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></span>\n            BIN Data Information\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-3\">\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Bank Name</p>\n                <p className=\"font-medium\">{data.bank?.name || 'N/A'}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Card Brand/Network</p>\n                <div className=\"flex items-center gap-2\">\n                  <Badge variant=\"outline\" className=\"capitalize\">\n                    {data.scheme || 'Unknown'}\n                  </Badge>\n                  {data.brand && (\n                    <span className=\"text-sm text-muted-foreground\">({data.brand})</span>\n                  )}\n                </div>\n              </div>\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Card Type</p>\n                <Badge variant=\"secondary\" className=\"capitalize\">\n                  {data.type || 'Unknown'}\n                </Badge>\n              </div>\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Prepaid Card</p>\n                <p className=\"font-medium\">\n                  {data.prepaid === true ? 'Yes' : data.prepaid === false ? 'No' : 'Unknown'}\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"space-y-3\">\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Country of Issuance</p>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-lg\">{data.country?.emoji || '🌍'}</span>\n                  <div>\n                    <p className=\"font-medium\">{data.country?.name || 'Unknown'}</p>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {data.country?.alpha2 || 'XX'} • {data.country?.alpha3 || 'XXX'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Currency</p>\n                <p className=\"font-medium\">{data.country?.currency || 'Unknown'}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Bank Contact</p>\n                <div className=\"space-y-1\">\n                  {data.bank?.phone && (\n                    <p className=\"text-sm\">{data.bank.phone}</p>\n                  )}\n                  {data.bank?.url && (\n                    <a \n                      href={data.bank.url} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                      className=\"text-sm text-blue-600 hover:underline\"\n                    >\n                      {data.bank.url}\n                    </a>\n                  )}\n                  {data.bank?.city && (\n                    <p className=\"text-sm text-muted-foreground\">{data.bank.city}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Security & Authentication Section */}\n        {securityAnalysis && (\n          <>\n            <Separator />\n            <section>\n              <h3 className=\"text-lg font-semibold mb-3 flex items-center\">\n                <span className=\"w-2 h-2 bg-red-500 rounded-full mr-2\"></span>\n                Security & Authentication Checks\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                <div className=\"p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground\">2D Secure Support</p>\n                  <p className={`font-medium ${securityAnalysis.supports2DSecure ? 'text-green-600' : 'text-red-600'}`}>\n                    {securityAnalysis.supports2DSecure ? '✓ Yes' : '✗ No'}\n                  </p>\n                </div>\n                <div className=\"p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground\">3D Secure Support</p>\n                  <p className={`font-medium ${securityAnalysis.supports3DSecure ? 'text-green-600' : 'text-red-600'}`}>\n                    {securityAnalysis.supports3DSecure ? '✓ Yes' : '✗ No'}\n                  </p>\n                </div>\n                <div className=\"p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground\">Risk Score</p>\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\n                      <div \n                        className={`h-2 rounded-full ${\n                          securityAnalysis.riskScore < 30 ? 'bg-green-500' :\n                          securityAnalysis.riskScore < 70 ? 'bg-yellow-500' : 'bg-red-500'\n                        }`}\n                        style={{ width: `${securityAnalysis.riskScore}%` }}\n                      ></div>\n                    </div>\n                    <span className=\"text-sm font-medium\">{securityAnalysis.riskScore}/100</span>\n                  </div>\n                </div>\n                <div className=\"p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground\">International Support</p>\n                  <p className={`font-medium ${securityAnalysis.supportsInternational ? 'text-green-600' : 'text-red-600'}`}>\n                    {securityAnalysis.supportsInternational ? '✓ Yes' : '✗ No'}\n                  </p>\n                </div>\n              </div>\n            </section>\n          </>\n        )}\n\n        {/* BIN Type Detection Section */}\n        {securityAnalysis && (\n          <>\n            <Separator />\n            <section>\n              <h3 className=\"text-lg font-semibold mb-3 flex items-center\">\n                <span className=\"w-2 h-2 bg-purple-500 rounded-full mr-2\"></span>\n                BIN Type Detection\n              </h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground mb-1\">Commercial/Corporate</p>\n                  <p className={`font-medium ${securityAnalysis.isCommercial ? 'text-green-600' : 'text-gray-600'}`}>\n                    {securityAnalysis.isCommercial ? 'Yes' : 'No'}\n                  </p>\n                </div>\n                <div className=\"text-center p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground mb-1\">Virtual Card</p>\n                  <p className={`font-medium ${securityAnalysis.isVirtual ? 'text-green-600' : 'text-gray-600'}`}>\n                    {securityAnalysis.isVirtual ? 'Yes' : 'No'}\n                  </p>\n                </div>\n                <div className=\"text-center p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground mb-1\">Gift Card</p>\n                  <p className={`font-medium ${securityAnalysis.isGiftCard ? 'text-green-600' : 'text-gray-600'}`}>\n                    {securityAnalysis.isGiftCard ? 'Yes' : 'No'}\n                  </p>\n                </div>\n                <div className=\"text-center p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground mb-1\">Reloadable</p>\n                  <p className={`font-medium ${securityAnalysis.isReloadable ? 'text-green-600' : 'text-gray-600'}`}>\n                    {securityAnalysis.isReloadable ? 'Yes' : 'No'}\n                  </p>\n                </div>\n                <div className=\"text-center p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground mb-1\">EMV Enabled</p>\n                  <p className={`font-medium ${securityAnalysis.isEMVEnabled ? 'text-green-600' : 'text-gray-600'}`}>\n                    {securityAnalysis.isEMVEnabled ? 'Yes' : 'No'}\n                  </p>\n                </div>\n                <div className=\"text-center p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground mb-1\">Contactless</p>\n                  <p className={`font-medium ${securityAnalysis.isContactlessCapable ? 'text-green-600' : 'text-gray-600'}`}>\n                    {securityAnalysis.isContactlessCapable ? 'Yes' : 'No'}\n                  </p>\n                </div>\n              </div>\n            </section>\n          </>\n        )}\n\n        {/* Geolocation Section */}\n        {securityAnalysis && (\n          <>\n            <Separator />\n            <section>\n              <h3 className=\"text-lg font-semibold mb-3 flex items-center\">\n                <span className=\"w-2 h-2 bg-orange-500 rounded-full mr-2\"></span>\n                Geolocation & Regional Info\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                <div className=\"p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground\">Timezone</p>\n                  <p className=\"font-medium\">{securityAnalysis.timezone}</p>\n                </div>\n                <div className=\"p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground\">Continent</p>\n                  <p className=\"font-medium\">{securityAnalysis.continent}</p>\n                </div>\n                <div className=\"p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground\">Language</p>\n                  <p className=\"font-medium\">{securityAnalysis.language}</p>\n                </div>\n                <div className=\"p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground\">Dialing Code</p>\n                  <p className=\"font-medium\">{securityAnalysis.dialingCode}</p>\n                </div>\n              </div>\n              {data.country?.latitude && data.country?.longitude && (\n                <div className=\"mt-4 p-3 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground mb-1\">Coordinates</p>\n                  <p className=\"font-medium\">\n                    {data.country.latitude}°, {data.country.longitude}°\n                  </p>\n                </div>\n              )}\n            </section>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1511, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 1542, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 1587, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1836, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/BulkBinCheck.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useMemo } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport BinInfoCard from './BinInfoCard';\n\ninterface BulkResult {\n  bin: string;\n  data?: any;\n  error?: string;\n  isLuhnValid?: boolean;\n}\n\ninterface BulkAnalytics {\n  totalRequested: number;\n  successful: number;\n  failed: number;\n  processingTimeMs: number;\n  averageTimePerBin: number;\n  luhnValidCount: number;\n  luhnInvalidCount: number;\n  cardTypes: Record<string, number>;\n  countries: Record<string, number>;\n  schemes: Record<string, number>;\n}\n\nexport default function BulkBinCheck() {\n  const [inputText, setInputText] = useState('');\n  const [results, setResults] = useState<BulkResult[]>([]);\n  const [analytics, setAnalytics] = useState<BulkAnalytics | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [countryFilter, setCountryFilter] = useState<string>('all');\n\n  const handleBulkCheck = async () => {\n    if (!inputText.trim()) {\n      setError('Please enter BIN numbers to check');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setResults([]);\n    setAnalytics(null);\n    setProgress(0);\n\n    try {\n      // Parse input - support both comma-separated and newline-separated\n      const bins = inputText\n        .split(/[,\\n]/)\n        .map(bin => bin.trim())\n        .filter(bin => bin.length > 0);\n\n      if (bins.length === 0) {\n        setError('No valid BIN numbers found');\n        setLoading(false);\n        return;\n      }\n\n      if (bins.length > 1000) {\n        setError('Maximum 1000 BINs allowed per bulk request');\n        setLoading(false);\n        return;\n      }\n\n      // Simulate progress updates\n      const progressInterval = setInterval(() => {\n        setProgress(prev => Math.min(prev + 10, 90));\n      }, 200);\n\n      const response = await fetch('/api/bulkBinLookup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ bins }),\n      });\n\n      clearInterval(progressInterval);\n      setProgress(100);\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Bulk lookup failed');\n      }\n\n      const data = await response.json();\n      setResults(data.results);\n      setAnalytics(data.analytics);\n\n    } catch (err: any) {\n      setError(err.message || 'Failed to perform bulk lookup');\n    } finally {\n      setLoading(false);\n      setTimeout(() => setProgress(0), 1000);\n    }\n  };\n\n  const handleClear = () => {\n    setInputText('');\n    setResults([]);\n    setAnalytics(null);\n    setError('');\n    setCountryFilter('all');\n  };\n\n  const handleExportCsv = async () => {\n    if (results.length === 0) return;\n\n    try {\n      const response = await fetch('/api/bulkBinLookup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          bins: results.map(r => r.bin),\n          format: 'csv'\n        }),\n      });\n\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'bin-lookup-results.csv';\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      }\n    } catch (err) {\n      console.error('Export failed:', err);\n    }\n  };\n\n  const handleExportValidBins = () => {\n    const validResults = results.filter(r => !r.error);\n    if (validResults.length === 0) return;\n\n    const csvContent = [\n      ['BIN', 'Bank Name', 'Card Type', 'Scheme', 'Country', 'Currency'].join(','),\n      ...validResults.map(result => [\n        result.bin,\n        result.data?.bank?.name || 'N/A',\n        result.data?.type || 'N/A',\n        result.data?.scheme || 'N/A',\n        result.data?.country?.name || 'N/A',\n        result.data?.country?.currency || 'N/A'\n      ].map(cell => `\"${cell}\"`).join(','))\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'valid-bins-only.csv';\n    document.body.appendChild(a);\n    a.click();\n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n  };\n\n  // Get unique countries for filter\n  const availableCountries = useMemo(() => {\n    const countries = new Set<string>();\n    results.forEach(result => {\n      if (result.data?.country?.name && !result.error) {\n        countries.add(result.data.country.name);\n      }\n    });\n    return Array.from(countries).sort();\n  }, [results]);\n\n  // Filter results by country\n  const filteredResults = useMemo(() => {\n    if (countryFilter === 'all') return results;\n    return results.filter(result => \n      result.data?.country?.name === countryFilter\n    );\n  }, [results, countryFilter]);\n\n  const successfulResults = filteredResults.filter(r => !r.error);\n  const failedResults = filteredResults.filter(r => r.error);\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between\">\n            <span>Bulk BIN Checker</span>\n            <Badge variant=\"outline\">Max 1000 BINs</Badge>\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div>\n            <label className=\"text-sm font-medium mb-2 block\">\n              Enter BIN numbers (comma or newline separated):\n            </label>\n            <Textarea\n              value={inputText}\n              onChange={(e) => setInputText(e.target.value)}\n              placeholder=\"411111,555555,378282&#10;or&#10;411111&#10;555555&#10;378282&#10;or full card numbers like 4111111111111111\"\n              rows={6}\n              className=\"font-mono\"\n            />\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Example: 411111,555555,378282 or one BIN per line or full card numbers (BIN will be extracted automatically)\n            </p>\n          </div>\n\n          {error && (\n            <Alert variant=\"destructive\">\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n\n          {loading && (\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between text-sm\">\n                <span>Processing BINs...</span>\n                <span>{progress}%</span>\n              </div>\n              <Progress value={progress} className=\"w-full\" />\n            </div>\n          )}\n\n          <div className=\"flex gap-2 flex-wrap\">\n            <Button \n              onClick={handleBulkCheck} \n              disabled={loading || !inputText.trim()}\n              className=\"flex-1\"\n            >\n              {loading ? 'Processing...' : 'Check BINs'}\n            </Button>\n            <Button \n              variant=\"outline\" \n              onClick={handleClear}\n              disabled={loading}\n            >\n              Clear\n            </Button>\n            {results.length > 0 && (\n              <>\n                <Button \n                  variant=\"secondary\" \n                  onClick={handleExportCsv}\n                  disabled={loading}\n                >\n                  Export All CSV\n                </Button>\n                <Button \n                  variant=\"default\" \n                  onClick={handleExportValidBins}\n                  disabled={loading || successfulResults.length === 0}\n                >\n                  Export Valid BINs\n                </Button>\n              </>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Country Filter */}\n      {availableCountries.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Filter Results</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center gap-4\">\n              <label className=\"text-sm font-medium\">Filter by Country:</label>\n              <Select value={countryFilter} onValueChange={setCountryFilter}>\n                <SelectTrigger className=\"w-48\">\n                  <SelectValue placeholder=\"Select country\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Countries ({results.filter(r => !r.error).length})</SelectItem>\n                  {availableCountries.map(country => {\n                    const count = results.filter(r => r.data?.country?.name === country && !r.error).length;\n                    return (\n                      <SelectItem key={country} value={country}>\n                        {country} ({count})\n                      </SelectItem>\n                    );\n                  })}\n                </SelectContent>\n              </Select>\n              {countryFilter !== 'all' && (\n                <Badge variant=\"secondary\">\n                  Showing {filteredResults.filter(r => !r.error).length} results\n                </Badge>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Analytics Dashboard */}\n      {analytics && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Bulk Analysis Summary</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n              <div className=\"text-center p-3 bg-muted rounded-lg\">\n                <p className=\"text-2xl font-bold text-green-600\">{analytics.successful}</p>\n                <p className=\"text-sm text-muted-foreground\">Successful (Luhn Valid)</p>\n              </div>\n              <div className=\"text-center p-3 bg-muted rounded-lg\">\n                <p className=\"text-2xl font-bold text-red-600\">{analytics.failed}</p>\n                <p className=\"text-sm text-muted-foreground\">Failed (Luhn Invalid)</p>\n              </div>\n              <div className=\"text-center p-3 bg-muted rounded-lg\">\n                <p className=\"text-2xl font-bold text-blue-600\">{analytics.processingTimeMs}ms</p>\n                <p className=\"text-sm text-muted-foreground\">Total Time</p>\n              </div>\n              <div className=\"text-center p-3 bg-muted rounded-lg\">\n                <p className=\"text-2xl font-bold text-purple-600\">{analytics.averageTimePerBin}ms</p>\n                <p className=\"text-sm text-muted-foreground\">Avg per BIN</p>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              {/* Card Types */}\n              <div>\n                <h4 className=\"font-semibold mb-2\">Card Types</h4>\n                <div className=\"space-y-2\">\n                  {Object.entries(analytics.cardTypes).map(([type, count]) => (\n                    <div key={type} className=\"flex justify-between items-center\">\n                      <Badge variant=\"outline\" className=\"capitalize\">{type}</Badge>\n                      <span className=\"text-sm font-medium\">{count}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Countries */}\n              <div>\n                <h4 className=\"font-semibold mb-2\">Countries</h4>\n                <div className=\"space-y-2\">\n                  {Object.entries(analytics.countries).slice(0, 5).map(([country, count]) => (\n                    <div key={country} className=\"flex justify-between items-center\">\n                      <span className=\"text-sm truncate\">{country}</span>\n                      <span className=\"text-sm font-medium\">{count}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Schemes */}\n              <div>\n                <h4 className=\"font-semibold mb-2\">Card Schemes</h4>\n                <div className=\"space-y-2\">\n                  {Object.entries(analytics.schemes).map(([scheme, count]) => (\n                    <div key={scheme} className=\"flex justify-between items-center\">\n                      <Badge variant=\"secondary\" className=\"capitalize\">{scheme}</Badge>\n                      <span className=\"text-sm font-medium\">{count}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Results */}\n      {results.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle>\n              Results ({filteredResults.length} BINs {countryFilter !== 'all' ? `from ${countryFilter}` : 'processed'})\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Tabs defaultValue=\"successful\" className=\"w-full\">\n              <TabsList className=\"grid w-full grid-cols-3\">\n                <TabsTrigger value=\"successful\">\n                  Valid (Luhn Passed) ({successfulResults.length})\n                </TabsTrigger>\n                <TabsTrigger value=\"failed\">\n                  Invalid (Luhn Failed) ({failedResults.length})\n                </TabsTrigger>\n                <TabsTrigger value=\"all\">\n                  All Results\n                </TabsTrigger>\n              </TabsList>\n\n              <TabsContent value=\"successful\" className=\"space-y-4\">\n                {successfulResults.length === 0 ? (\n                  <p className=\"text-center text-muted-foreground py-8\">\n                    No BINs passed Luhn validation {countryFilter !== 'all' ? `from ${countryFilter}` : ''}\n                  </p>\n                ) : (\n                  successfulResults.map((result, index) => (\n                    <BinInfoCard\n                      key={`success-${index}`}\n                      bin={result.bin}\n                      data={result.data}\n                      isLuhnValid={result.isLuhnValid || false}\n                    />\n                  ))\n                )}\n              </TabsContent>\n\n              <TabsContent value=\"failed\" className=\"space-y-4\">\n                {failedResults.length === 0 ? (\n                  <p className=\"text-center text-muted-foreground py-8\">\n                    No failed results {countryFilter !== 'all' ? `from ${countryFilter}` : ''}\n                  </p>\n                ) : (\n                  failedResults.map((result, index) => (\n                    <Card key={`failed-${index}`}>\n                      <CardContent className=\"pt-6\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"font-medium\">BIN: {result.bin}</p>\n                            <p className=\"text-sm text-red-600\">{result.error}</p>\n                          </div>\n                          <Badge variant=\"destructive\">Failed Luhn Check</Badge>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))\n                )}\n              </TabsContent>\n\n              <TabsContent value=\"all\" className=\"space-y-4\">\n                {filteredResults.map((result, index) => (\n                  <div key={`all-${index}`}>\n                    {result.error ? (\n                      <Card>\n                        <CardContent className=\"pt-6\">\n                          <div className=\"flex items-center justify-between\">\n                            <div>\n                              <p className=\"font-medium\">BIN: {result.bin}</p>\n                              <p className=\"text-sm text-red-600\">{result.error}</p>\n                            </div>\n                            <Badge variant=\"destructive\">Failed Luhn Check</Badge>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ) : (\n                      <BinInfoCard\n                        bin={result.bin}\n                        data={result.data}\n                        isLuhnValid={result.isLuhnValid || false}\n                      />\n                    )}\n                  </div>\n                ))}\n              </TabsContent>\n            </Tabs>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2919, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/BinGenerator.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { Progress } from '@/components/ui/progress';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\n\ninterface Country {\n  code: string;\n  name: string;\n  emoji: string;\n  currency: string;\n}\n\ninterface GeneratedResult {\n  bins: string[];\n  country: string;\n  countryCode: string;\n  currency: string;\n  emoji: string;\n  count: number;\n  requestedCount: number;\n  processingTimeMs: number;\n  options: {\n    scheme: string;\n    type: string;\n    length: number;\n  };\n}\n\nexport default function BinGenerator() {\n  const [countries, setCountries] = useState<Country[]>([]);\n  const [schemes, setSchemes] = useState<string[]>([]);\n  const [types, setTypes] = useState<string[]>([]);\n  \n  const [selectedCountry, setSelectedCountry] = useState<string>('');\n  const [selectedScheme, setSelectedScheme] = useState<string>('');\n  const [selectedType, setSelectedType] = useState<string>('');\n  const [count, setCount] = useState<number>(1);\n  const [length, setLength] = useState<number>(8);\n  \n  const [result, setResult] = useState<GeneratedResult | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n\n  // Load countries on component mount\n  useEffect(() => {\n    loadCountries();\n  }, []);\n\n  // Load schemes when country changes\n  useEffect(() => {\n    if (selectedCountry) {\n      loadSchemes(selectedCountry);\n    } else {\n      setSchemes([]);\n      setTypes([]);\n    }\n  }, [selectedCountry]);\n\n  // Load types when country or scheme changes\n  useEffect(() => {\n    if (selectedCountry) {\n      loadTypes(selectedCountry, selectedScheme);\n    } else {\n      setTypes([]);\n    }\n  }, [selectedCountry, selectedScheme]);\n\n  const loadCountries = async () => {\n    try {\n      const response = await fetch('/api/generateBins?action=countries');\n      const data = await response.json();\n      setCountries(data.countries || []);\n    } catch (err) {\n      console.error('Failed to load countries:', err);\n    }\n  };\n\n  const loadSchemes = async (countryCode: string) => {\n    try {\n      const response = await fetch(`/api/generateBins?action=schemes&countryCode=${countryCode}`);\n      const data = await response.json();\n      setSchemes(data.schemes || []);\n      setSelectedScheme(''); // Reset scheme selection\n    } catch (err) {\n      console.error('Failed to load schemes:', err);\n    }\n  };\n\n  const loadTypes = async (countryCode: string, scheme?: string) => {\n    try {\n      const url = `/api/generateBins?action=types&countryCode=${countryCode}${scheme ? `&scheme=${scheme}` : ''}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setTypes(data.types || []);\n      setSelectedType(''); // Reset type selection\n    } catch (err) {\n      console.error('Failed to load types:', err);\n    }\n  };\n\n  const handleGenerate = async () => {\n    if (!selectedCountry) {\n      setError('Please select a country');\n      return;\n    }\n\n    if (count < 1 || count > 500) {\n      setError('Count must be between 1 and 500');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setResult(null);\n    setProgress(0);\n\n    try {\n      // Simulate progress\n      const progressInterval = setInterval(() => {\n        setProgress(prev => Math.min(prev + 20, 90));\n      }, 100);\n\n      const response = await fetch('/api/generateBins', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          countryCode: selectedCountry,\n          count,\n          scheme: selectedScheme || undefined,\n          type: selectedType || undefined,\n          length\n        }),\n      });\n\n      clearInterval(progressInterval);\n      setProgress(100);\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Generation failed');\n      }\n\n      const data = await response.json();\n      setResult(data);\n\n    } catch (err: any) {\n      setError(err.message || 'Failed to generate BINs');\n    } finally {\n      setLoading(false);\n      setTimeout(() => setProgress(0), 1000);\n    }\n  };\n\n  const handleClear = () => {\n    setSelectedCountry('');\n    setSelectedScheme('');\n    setSelectedType('');\n    setCount(1);\n    setLength(8);\n    setResult(null);\n    setError('');\n  };\n\n  const handleDownload = async (format: 'txt' | 'csv') => {\n    if (!result || !selectedCountry) return;\n\n    try {\n      const response = await fetch('/api/generateBins', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          countryCode: selectedCountry,\n          count,\n          scheme: selectedScheme || undefined,\n          type: selectedType || undefined,\n          length,\n          format\n        }),\n      });\n\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `generated-bins-${selectedCountry}-${count}.${format}`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      }\n    } catch (err) {\n      console.error('Download failed:', err);\n    }\n  };\n\n  const selectedCountryData = countries.find(c => c.code === selectedCountry);\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between\">\n            <span>BIN Generator</span>\n            <Badge variant=\"outline\">Max 500 BINs</Badge>\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Country Selection */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">\n                Select Country *\n              </label>\n              <Select value={selectedCountry} onValueChange={setSelectedCountry}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Choose a country\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {countries.map(country => (\n                    <SelectItem key={country.code} value={country.code}>\n                      {country.emoji} {country.name} ({country.currency})\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">\n                Number of BINs *\n              </label>\n              <Input\n                type=\"number\"\n                min=\"1\"\n                max=\"500\"\n                value={count}\n                onChange={(e) => setCount(parseInt(e.target.value) || 1)}\n                placeholder=\"Enter count (1-500)\"\n              />\n            </div>\n          </div>\n\n          {/* Optional Filters */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">\n                Card Scheme (Optional)\n              </label>\n              <Select value={selectedScheme} onValueChange={setSelectedScheme}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Any scheme\" />\n                </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"any\">Any Scheme</SelectItem>\n                {schemes.map(scheme => (\n                  <SelectItem key={scheme} value={scheme}>\n                    {scheme.charAt(0).toUpperCase() + scheme.slice(1)}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">\n                Card Type (Optional)\n              </label>\n              <Select value={selectedType} onValueChange={setSelectedType}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Any type\" />\n                </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"any\">Any Type</SelectItem>\n                {types.map(type => (\n                  <SelectItem key={type} value={type}>\n                    {type.charAt(0).toUpperCase() + type.slice(1)}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">\n                BIN Length\n              </label>\n              <Select value={length.toString()} onValueChange={(value) => setLength(parseInt(value))}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"6\">6 digits</SelectItem>\n                  <SelectItem value=\"8\">8 digits</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          {/* Selected Country Info */}\n          {selectedCountryData && (\n            <div className=\"p-4 bg-muted rounded-lg\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <span className=\"text-2xl\">{selectedCountryData.emoji}</span>\n                <div>\n                  <p className=\"font-medium\">{selectedCountryData.name}</p>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Currency: {selectedCountryData.currency} • Available schemes: {schemes.length}\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {error && (\n            <Alert variant=\"destructive\">\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n\n          {loading && (\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between text-sm\">\n                <span>Generating BINs...</span>\n                <span>{progress}%</span>\n              </div>\n              <Progress value={progress} className=\"w-full\" />\n            </div>\n          )}\n\n          <div className=\"flex gap-2\">\n            <Button \n              onClick={handleGenerate} \n              disabled={loading || !selectedCountry}\n              className=\"flex-1\"\n            >\n              {loading ? 'Generating...' : 'Generate BINs'}\n            </Button>\n            <Button \n              variant=\"outline\" \n              onClick={handleClear}\n              disabled={loading}\n            >\n              Clear\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Results */}\n      {result && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center justify-between\">\n              <span>Generated BINs</span>\n              <div className=\"flex gap-2\">\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\"\n                  onClick={() => handleDownload('txt')}\n                >\n                  Download TXT\n                </Button>\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\"\n                  onClick={() => handleDownload('csv')}\n                >\n                  Download CSV\n                </Button>\n              </div>\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {/* Summary */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center p-3 bg-muted rounded-lg\">\n                <p className=\"text-2xl font-bold text-green-600\">{result.count}</p>\n                <p className=\"text-sm text-muted-foreground\">Generated</p>\n              </div>\n              <div className=\"text-center p-3 bg-muted rounded-lg\">\n                <p className=\"text-2xl font-bold text-blue-600\">{result.processingTimeMs}ms</p>\n                <p className=\"text-sm text-muted-foreground\">Processing Time</p>\n              </div>\n              <div className=\"text-center p-3 bg-muted rounded-lg\">\n                <p className=\"text-2xl font-bold text-purple-600\">{result.options.length}</p>\n                <p className=\"text-sm text-muted-foreground\">Digits Length</p>\n              </div>\n              <div className=\"text-center p-3 bg-muted rounded-lg\">\n                <p className=\"text-2xl font-bold text-orange-600\">100%</p>\n                <p className=\"text-sm text-muted-foreground\">Luhn Valid</p>\n              </div>\n            </div>\n\n            <Separator />\n\n            {/* Country and Options Info */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"p-4 bg-muted rounded-lg\">\n                <h4 className=\"font-semibold mb-2 flex items-center gap-2\">\n                  {result.emoji} Country Information\n                </h4>\n                <div className=\"space-y-1 text-sm\">\n                  <p><strong>Country:</strong> {result.country}</p>\n                  <p><strong>Currency:</strong> {result.currency}</p>\n                  <p><strong>Code:</strong> {result.countryCode}</p>\n                </div>\n              </div>\n              <div className=\"p-4 bg-muted rounded-lg\">\n                <h4 className=\"font-semibold mb-2\">Generation Options</h4>\n                <div className=\"space-y-1 text-sm\">\n                  <p><strong>Scheme:</strong> {result.options.scheme}</p>\n                  <p><strong>Type:</strong> {result.options.type}</p>\n                  <p><strong>Length:</strong> {result.options.length} digits</p>\n                </div>\n              </div>\n            </div>\n\n            <Separator />\n\n            {/* Generated BINs */}\n            <div>\n              <h4 className=\"font-semibold mb-3\">Generated BINs ({result.count})</h4>\n              <Textarea\n                value={result.bins.join('\\n')}\n                readOnly\n                rows={Math.min(result.bins.length, 10)}\n                className=\"font-mono text-sm\"\n                placeholder=\"Generated BINs will appear here...\"\n              />\n              <p className=\"text-xs text-muted-foreground mt-2\">\n                All generated BINs are Luhn algorithm compliant and ready for testing.\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4008, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport BinInfoCard from '@/components/BinInfoCard';\nimport BulkBinCheck from '@/components/BulkBinCheck';\nimport BinGenerator from '@/components/BinGenerator';\n\ninterface BinResult {\n  bin: string;\n  isValid: boolean;\n  isLuhnValid: boolean;\n  binData: any;\n  securityAnalysis: any;\n  validation: any;\n  error?: string;\n}\n\nexport default function HomePage() {\n  const [bin, setBin] = useState('');\n  const [result, setResult] = useState<BinResult | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSingleLookup = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!bin.trim()) {\n      setError('Please enter a BIN number');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setResult(null);\n\n    try {\n      const response = await fetch('/api/binLookup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ bin: bin.trim() }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Lookup failed');\n      }\n\n      setResult(data);\n    } catch (err: any) {\n      setError(err.message || 'Failed to lookup BIN');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClear = () => {\n    setBin('');\n    setResult(null);\n    setError('');\n  };\n\n  const handleExampleBin = (exampleBin: string) => {\n    setBin(exampleBin);\n    setResult(null);\n    setError('');\n  };\n\n  const exampleBins = [\n    { bin: '411111', type: 'Visa Test' },\n    { bin: '555555', type: 'Mastercard Test' },\n    { bin: '378282', type: 'American Express Test' },\n    { bin: '6011000', type: 'Discover Test' },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-background to-muted/20\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-12\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-primary rounded-2xl mb-6\">\n            <span className=\"text-2xl font-bold text-primary-foreground\">BC</span>\n          </div>\n          <h1 className=\"text-4xl md:text-6xl font-bold mb-4 bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\">\n            BIN Checker Pro\n          </h1>\n          <p className=\"text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\">\n            Advanced Bank Identification Number validator with comprehensive security analysis, \n            fraud detection, real-time validation, and BIN generation using multiple data sources.\n          </p>\n          \n          {/* Feature Badges */}\n          <div className=\"flex flex-wrap justify-center gap-2 mb-8\">\n            <Badge variant=\"secondary\">Luhn Algorithm</Badge>\n            <Badge variant=\"secondary\">Security Analysis</Badge>\n            <Badge variant=\"secondary\">Bulk Processing</Badge>\n            <Badge variant=\"secondary\">BIN Generator</Badge>\n            <Badge variant=\"secondary\">Real-time API</Badge>\n            <Badge variant=\"secondary\">CSV Export</Badge>\n            <Badge variant=\"secondary\">Multi-threaded</Badge>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"max-w-6xl mx-auto\">\n          <Tabs defaultValue=\"single\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-3 mb-8\">\n              <TabsTrigger value=\"single\" className=\"text-base\">\n                Single BIN Lookup\n              </TabsTrigger>\n              <TabsTrigger value=\"bulk\" className=\"text-base\">\n                Bulk BIN Processing\n              </TabsTrigger>\n              <TabsTrigger value=\"generator\" className=\"text-base\">\n                BIN Generator\n              </TabsTrigger>\n            </TabsList>\n\n            {/* Single BIN Lookup Tab */}\n            <TabsContent value=\"single\" className=\"space-y-8\">\n              <Card className=\"border-2\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <span>Single BIN Validation</span>\n                    <Badge variant=\"outline\">Real-time</Badge>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-6\">\n                  <form onSubmit={handleSingleLookup} className=\"space-y-4\">\n                    <div>\n                      <label className=\"text-sm font-medium mb-2 block\">\n                        Enter BIN (6-8 digits):\n                      </label>\n                      <div className=\"flex gap-2\">\n                        <Input\n                          type=\"text\"\n                          value={bin}\n                          onChange={(e) => setBin(e.target.value.replace(/\\D/g, '').slice(0, 8))}\n                          placeholder=\"e.g., 411111, 555555, 378282\"\n                          className=\"font-mono text-lg\"\n                          maxLength={8}\n                        />\n                        <Button type=\"submit\" disabled={loading || !bin.trim()}>\n                          {loading ? 'Validating...' : 'Validate'}\n                        </Button>\n                        <Button type=\"button\" variant=\"outline\" onClick={handleClear}>\n                          Clear\n                        </Button>\n                      </div>\n                      <p className=\"text-xs text-muted-foreground mt-1\">\n                        Enter 6-8 digit numeric BIN for comprehensive analysis\n                      </p>\n                    </div>\n                  </form>\n\n                  {/* Example BINs */}\n                  <div>\n                    <p className=\"text-sm font-medium mb-2\">Try these example BINs:</p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {exampleBins.map((example) => (\n                        <Button\n                          key={example.bin}\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleExampleBin(example.bin)}\n                          className=\"text-xs\"\n                        >\n                          {example.bin} ({example.type})\n                        </Button>\n                      ))}\n                    </div>\n                  </div>\n\n                  {error && (\n                    <Alert variant=\"destructive\">\n                      <AlertDescription>{error}</AlertDescription>\n                    </Alert>\n                  )}\n\n                  {loading && (\n                    <div className=\"flex items-center justify-center py-8\">\n                      <div className=\"flex items-center space-x-2\">\n                        <div className=\"w-4 h-4 border-2 border-primary border-t-transparent rounded-full animate-spin\"></div>\n                        <span className=\"text-sm text-muted-foreground\">\n                          Analyzing BIN with multiple data sources...\n                        </span>\n                      </div>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n\n              {/* Single BIN Results */}\n              {result && !loading && (\n                <BinInfoCard\n                  bin={result.bin}\n                  data={result.binData}\n                  isLuhnValid={result.isLuhnValid}\n                  securityAnalysis={result.securityAnalysis}\n                  validation={result.validation}\n                />\n              )}\n            </TabsContent>\n\n            {/* Bulk BIN Processing Tab */}\n            <TabsContent value=\"bulk\">\n              <BulkBinCheck />\n            </TabsContent>\n\n            {/* BIN Generator Tab */}\n            <TabsContent value=\"generator\">\n              <BinGenerator />\n            </TabsContent>\n          </Tabs>\n\n          {/* Features Section */}\n          <div className=\"mt-16\" id=\"features\">\n            <h2 className=\"text-3xl font-bold text-center mb-12\">Comprehensive BIN Analysis & Generation</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <Card className=\"text-center\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <span className=\"text-blue-600 dark:text-blue-400 font-bold\">✓</span>\n                  </div>\n                  <h3 className=\"font-semibold mb-2\">Format Validation</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Validates BIN format, length, and numeric requirements with Luhn algorithm check.\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card className=\"text-center\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"w-12 h-12 bg-green-100 dark:bg-green-900 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <span className=\"text-green-600 dark:text-green-400 font-bold\">🏦</span>\n                  </div>\n                  <h3 className=\"font-semibold mb-2\">Bank Information</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Retrieves bank name, contact details, card brand, type, and issuing country data.\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card className=\"text-center\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"w-12 h-12 bg-red-100 dark:bg-red-900 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <span className=\"text-red-600 dark:text-red-400 font-bold\">🔒</span>\n                  </div>\n                  <h3 className=\"font-semibold mb-2\">Security Analysis</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Analyzes 2D/3D Secure support, risk scores, and fraud prevention capabilities.\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card className=\"text-center\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"w-12 h-12 bg-purple-100 dark:bg-purple-900 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <span className=\"text-purple-600 dark:text-purple-400 font-bold\">⚡</span>\n                  </div>\n                  <h3 className=\"font-semibold mb-2\">BIN Generator</h3>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Generate valid BINs by country with up to 500 BINs and download as TXT/CSV.\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n\n          {/* API Information */}\n          <div className=\"mt-16\" id=\"api\">\n            <Card>\n              <CardHeader>\n                <CardTitle>API Endpoints</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Single BIN Lookup</h4>\n                    <div className=\"bg-muted p-3 rounded font-mono text-sm\">\n                      <p className=\"text-green-600\">POST</p>\n                      <p>/api/binLookup</p>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mt-2\">\n                      Validate and analyze a single BIN with comprehensive data.\n                    </p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Bulk BIN Processing</h4>\n                    <div className=\"bg-muted p-3 rounded font-mono text-sm\">\n                      <p className=\"text-blue-600\">POST</p>\n                      <p>/api/bulkBinLookup</p>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mt-2\">\n                      Process multiple BINs concurrently with analytics and CSV export.\n                    </p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">BIN Generator</h4>\n                    <div className=\"bg-muted p-3 rounded font-mono text-sm\">\n                      <p className=\"text-purple-600\">POST</p>\n                      <p>/api/generateBins</p>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mt-2\">\n                      Generate valid BINs by country with TXT/CSV download options.\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* About Section */}\n          <div className=\"mt-16 text-center\" id=\"about\">\n            <Card>\n              <CardContent className=\"pt-6\">\n                <h2 className=\"text-2xl font-bold mb-4\">About BIN Checker Pro</h2>\n                <p className=\"text-muted-foreground max-w-3xl mx-auto\">\n                  BIN Checker Pro is a comprehensive Bank Identification Number validation and generation tool that provides \n                  real-time analysis of credit and debit card BINs. Using multiple data sources and advanced \n                  algorithms, it delivers accurate information about card types, issuing banks, security features, \n                  and geographical data. Perfect for payment processors, e-commerce platforms, and financial institutions.\n                </p>\n                <Separator className=\"my-6\" />\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 text-sm\">\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Fast & Reliable</h4>\n                    <p className=\"text-muted-foreground\">\n                      Multi-threaded processing with 8-second timeout and fallback data sources.\n                    </p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Comprehensive Data</h4>\n                    <p className=\"text-muted-foreground\">\n                      Bank details, security features, geolocation, and card type classification.\n                    </p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Developer Friendly</h4>\n                    <p className=\"text-muted-foreground\">\n                      RESTful API with JSON/CSV/TXT output and detailed error handling.\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}